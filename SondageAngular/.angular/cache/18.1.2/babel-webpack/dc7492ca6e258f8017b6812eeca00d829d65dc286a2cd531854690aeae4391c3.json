{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/question.service\";\nimport * as i2 from \"../../service/sondage.service\";\nimport * as i3 from \"../../service/reponse.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction SondageDetailsComponent_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"input\", 7);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function SondageDetailsComponent_div_1_div_4_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      i0.ɵɵtwoWayBindingSet(question_r2.selectedOption, $event) || (question_r2.selectedOption = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"id\", \"option-\", option_r3.IdOption, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"question-\", question_r2.idQuestion, \"\");\n    i0.ɵɵproperty(\"value\", option_r3.IdOption);\n    i0.ɵɵtwoWayProperty(\"ngModel\", question_r2.selectedOption);\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"for\", \"option-\", option_r3.IdOption, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(option_r3.texte);\n  }\n}\nfunction SondageDetailsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵtemplate(4, SondageDetailsComponent_div_1_div_4_Template, 4, 9, \"div\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\nexport let SondageDetailsComponent = /*#__PURE__*/(() => {\n  class SondageDetailsComponent {\n    constructor(questionService, sondageService, reponseService, router, route) {\n      this.questionService = questionService;\n      this.sondageService = sondageService;\n      this.reponseService = reponseService;\n      this.router = router;\n      this.route = route;\n      this.questions = [];\n      this.idSondage = 0;\n    }\n    ngOnInit() {\n      this.idSondage = Number(this.route.snapshot.paramMap.get('idSondage'));\n      if (this.idSondage) {\n        this.getSondageById(this.idSondage);\n        this.getAllQuestionsWithOptions(this.idSondage);\n      } else {\n        console.error('No idSondage provided');\n      }\n    }\n    getSondageById(idSondage) {\n      this.sondageService.findSondageById(idSondage).subscribe({\n        next: sondage => {\n          this.sondage = sondage;\n          console.log('Sondage:', this.sondage);\n        },\n        error: err => {\n          console.error('Error fetching sondage', err);\n        }\n      });\n    }\n    getAllQuestionsWithOptions(idSondage) {\n      this.questionService.getAllQuestionsWithOptions(idSondage).subscribe({\n        next: questions => {\n          this.questions = questions;\n          if (this.sondage) {\n            this.sondage.questions = this.questions; // Populate sondage with questions\n          } else {\n            this.sondage = {\n              idSondage: this.idSondage,\n              questions\n            };\n          }\n          // Initialize selectedOption for each question\n          this.sondage.questions.forEach(q => q.selectedOption = undefined);\n          console.log('Questions with options:', this.questions);\n        },\n        error: err => {\n          console.error('Error fetching questions', err);\n        }\n      });\n    }\n    submitSurvey() {\n      if (this.sondage) {\n        let allQuestionsAnswered = true;\n        this.sondage.questions.forEach(question => {\n          if (question.selectedOption === undefined || question.selectedOption === null) {\n            allQuestionsAnswered = false;\n            console.error(`Question with id ${question.idQuestion} is not answered. Selected option: ${question.selectedOption}`);\n          }\n        });\n        if (allQuestionsAnswered) {\n          this.sondage.questions.forEach(question => {\n            const response = {\n              // Add necessary response details if needed\n            };\n            if (question.selectedOption !== undefined) {\n              this.reponseService.addResponse(question.idQuestion, question.selectedOption, response).subscribe({\n                next: () => {\n                  console.log('Response submitted successfully for question:', question.idQuestion);\n                },\n                error: err => {\n                  console.error('Error submitting response for question:', question.idQuestion, err);\n                }\n              });\n            } else {\n              console.error('Selected option is undefined for question:', question.idQuestion);\n            }\n          });\n          this.router.navigate(['/Survey']);\n        } else {\n          alert('Please answer all the questions before submitting the survey.');\n        }\n      }\n    }\n    static #_ = this.ɵfac = function SondageDetailsComponent_Factory(t) {\n      return new (t || SondageDetailsComponent)(i0.ɵɵdirectiveInject(i1.QuestionService), i0.ɵɵdirectiveInject(i2.SondageService), i0.ɵɵdirectiveInject(i3.ReponseService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SondageDetailsComponent,\n      selectors: [[\"app-sondage-details\"]],\n      decls: 4,\n      vars: 1,\n      consts: [[1, \"survey-details\", 3, \"ngSubmit\"], [\"class\", \"question-container\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"submit-button\"], [1, \"question-container\"], [1, \"options-container\"], [\"class\", \"option\", 4, \"ngFor\", \"ngForOf\"], [1, \"option\"], [\"type\", \"radio\", \"required\", \"\", 3, \"ngModelChange\", \"id\", \"name\", \"value\", \"ngModel\"], [3, \"for\"]],\n      template: function SondageDetailsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function SondageDetailsComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.submitSurvey();\n          });\n          i0.ɵɵtemplate(1, SondageDetailsComponent_div_1_Template, 5, 2, \"div\", 1);\n          i0.ɵɵelementStart(2, \"button\", 2);\n          i0.ɵɵtext(3, \"Submit Response\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.sondage == null ? null : ctx.sondage.questions);\n        }\n      },\n      dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.RadioControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm],\n      styles: [\".survey-details[_ngcontent-%COMP%]{max-width:800px;margin:0 auto;padding:20px;background:#f9f9f9;border-radius:8px;box-shadow:0 2px 4px #0000001a}h1[_ngcontent-%COMP%]{font-size:24px;margin-bottom:20px;text-align:center;color:#333}form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.question-container[_ngcontent-%COMP%]{margin-bottom:20px}.question-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:18px;color:#555;margin-bottom:10px}.options-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.option[_ngcontent-%COMP%]{margin-bottom:10px}.option[_ngcontent-%COMP%]   input[type=radio][_ngcontent-%COMP%]{margin-right:10px}.option[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:16px;color:#333}.submit-button[_ngcontent-%COMP%]{margin-top:20px;padding:10px 20px;font-size:16px;color:#fff;background-color:#007bff;border:none;border-radius:4px;cursor:pointer;transition:background-color .3s ease}.submit-button[_ngcontent-%COMP%]:hover{background-color:#0056b3}.submit-button[_ngcontent-%COMP%]:disabled{background-color:silver;cursor:not-allowed}\"]\n    });\n  }\n  return SondageDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}