{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/sondage.service\";\nimport * as i3 from \"@angular/forms\";\nexport let EditSondageComponent = /*#__PURE__*/(() => {\n  class EditSondageComponent {\n    constructor(route, sondageService, router) {\n      this.route = route;\n      this.sondageService = sondageService;\n      this.router = router;\n      this.sondage = {\n        idSondage: 0,\n        title: '',\n        startDate: new Date(),\n        endDate: new Date()\n      };\n    }\n    ngOnInit() {\n      const idSondage = Number(this.route.snapshot.paramMap.get('idSondage'));\n      if (idSondage) {\n        this.sondageService.getAllSondages().subscribe(sondages => {\n          this.sondage = sondages.find(s => s.idSondage === idSondage);\n        });\n      }\n    }\n    updateSondage(sondage) {\n      this.sondageService.updateSondage(sondage, sondage.idSondage).subscribe(response => {\n        console.log('Sondage updated successfully', response);\n        this.router.navigate(['/SondageTable']);\n      }, error => {\n        console.error('Error updating sondage', error);\n      });\n    }\n    static #_ = this.ɵfac = function EditSondageComponent_Factory(t) {\n      return new (t || EditSondageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SondageService), i0.ɵɵdirectiveInject(i1.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditSondageComponent,\n      selectors: [[\"app-edit-sondage\"]],\n      decls: 18,\n      vars: 1,\n      consts: [[1, \"container\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"startDate\"], [\"type\", \"datetime-local\", \"id\", \"startDate\", \"formControlName\", \"startDate\", 1, \"form-control\"], [\"for\", \"endDate\"], [\"type\", \"datetime-local\", \"id\", \"endDate\", \"formControlName\", \"endDate\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function EditSondageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Edit Sondage\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function EditSondageComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.updateSondage();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n          i0.ɵɵtext(14, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 9);\n          i0.ɵɵtext(17, \"Update\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.sondageForm);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n    });\n  }\n  return EditSondageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}