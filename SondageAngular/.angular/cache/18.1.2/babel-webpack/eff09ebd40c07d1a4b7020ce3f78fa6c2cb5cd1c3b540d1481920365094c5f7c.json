{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/sondage.service\";\nimport * as i3 from \"@angular/forms\";\nexport let EditSondageComponent = /*#__PURE__*/(() => {\n  class EditSondageComponent {\n    constructor(route, sondageService, router) {\n      this.route = route;\n      this.sondageService = sondageService;\n      this.router = router;\n      this.sondage = {\n        idSondage: 0,\n        title: '',\n        startDate: new Date(),\n        endDate: new Date()\n      };\n    }\n    ngOnInit() {\n      const idSondage = Number(this.route.snapshot.paramMap.get('idSondage'));\n      if (idSondage) {\n        this.sondageService.getAllSondages().subscribe(sondages => {\n          this.sondage = sondages.find(s => s.idSondage === idSondage);\n        });\n      }\n    }\n    updateSondage(sondage) {\n      this.sondageService.updateSondage(sondage, sondage.idSondage).subscribe(response => {\n        console.log('Sondage updated successfully', response);\n        this.router.navigate(['/SondageTable']);\n      }, error => {\n        console.error('Error updating sondage', error);\n      });\n    }\n    static #_ = this.ɵfac = function EditSondageComponent_Factory(t) {\n      return new (t || EditSondageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SondageService), i0.ɵɵdirectiveInject(i1.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditSondageComponent,\n      selectors: [[\"app-edit-sondage\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function EditSondageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Edit Sondage\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n          i0.ɵɵtext(5, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function EditSondageComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.sondage.title, $event) || (ctx.sondage.title = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n          i0.ɵɵtext(9, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function EditSondageComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.sondage.startDate, $event) || (ctx.sondage.startDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n          i0.ɵɵtext(13, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function EditSondageComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.sondage.endDate, $event) || (ctx.sondage.endDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 8);\n          i0.ɵɵtext(16, \"Update\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.sondage.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.sondage.startDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.sondage.endDate);\n        }\n      },\n      dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.NgModel]\n    });\n  }\n  return EditSondageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}