{"ast":null,"code":"import Chart from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/sondage.service\";\nexport let CardLineChartComponent = /*#__PURE__*/(() => {\n  class CardLineChartComponent {\n    constructor(sondageService) {\n      this.sondageService = sondageService;\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      if (this.idSondage) {\n        this.sondageService.getSurveyCompletionRates(this.idSondage).subscribe(completionRates => {\n          const labels = Object.keys(completionRates);\n          const data = Object.values(completionRates);\n          this.renderChart(labels, data);\n        });\n      } else {\n        console.error('idSondage is undefined or null');\n      }\n    }\n    renderChart(labels, data) {\n      const config = {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Survey Completions',\n            backgroundColor: '#4c51bf',\n            borderColor: '#4c51bf',\n            data: data,\n            fill: false\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          title: {\n            display: true,\n            text: 'Survey Completion Rates Over Time',\n            fontColor: 'white'\n          },\n          legend: {\n            labels: {\n              fontColor: 'white'\n            },\n            align: 'end',\n            position: 'bottom'\n          },\n          tooltips: {\n            mode: 'index',\n            intersect: false\n          },\n          hover: {\n            mode: 'nearest',\n            intersect: true\n          },\n          scales: {\n            xAxes: [{\n              ticks: {\n                fontColor: 'rgba(255,255,255,.7)'\n              },\n              display: true,\n              gridLines: {\n                display: false,\n                borderDash: [2],\n                borderDashOffset: [2],\n                color: 'rgba(33, 37, 41, 0.3)',\n                zeroLineColor: 'rgba(0, 0, 0, 0)',\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2]\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                fontColor: 'rgba(255,255,255,.7)'\n              },\n              display: true,\n              gridLines: {\n                borderDash: [3],\n                borderDashOffset: [3],\n                drawBorder: false,\n                color: 'rgba(255, 255, 255, 0.15)',\n                zeroLineColor: 'rgba(33, 37, 41, 0)',\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2]\n              }\n            }]\n          }\n        }\n      };\n      // Get the context of the canvas element we want to select\n      const ctx = document.getElementById(\"line-chart\");\n      const chartContext = ctx.getContext(\"2d\");\n      new Chart(chartContext, config); // Create the chart\n    }\n    static #_ = this.ɵfac = function CardLineChartComponent_Factory(t) {\n      return new (t || CardLineChartComponent)(i0.ɵɵdirectiveInject(i1.SondageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CardLineChartComponent,\n      selectors: [[\"app-card-line-chart\"]],\n      inputs: {\n        idSondage: \"idSondage\"\n      },\n      decls: 11,\n      vars: 0,\n      consts: [[1, \"relative\", \"flex\", \"flex-col\", \"min-w-0\", \"break-words\", \"w-full\", \"mb-6\", \"shadow-lg\", \"rounded\", \"bg-blueGray-700\"], [1, \"rounded-t\", \"mb-0\", \"px-4\", \"py-3\", \"bg-transparent\"], [1, \"flex\", \"flex-wrap\", \"items-center\"], [1, \"relative\", \"w-full\", \"max-w-full\", \"flex-grow\", \"flex-1\"], [1, \"uppercase\", \"text-blueGray-100\", \"mb-1\", \"text-xs\", \"font-semibold\"], [1, \"text-white\", \"text-xl\", \"font-semibold\"], [1, \"p-4\", \"flex-auto\"], [1, \"relative\", 2, \"height\", \"350px\"], [\"id\", \"line-chart\"]],\n      template: function CardLineChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h6\", 4);\n          i0.ɵɵtext(5, \" Overview \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"h2\", 5);\n          i0.ɵɵtext(7, \"Survey Completion Rates\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n          i0.ɵɵelement(10, \"canvas\", 8);\n          i0.ɵɵelementEnd()()();\n        }\n      },\n      styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap \\\"use strict\\\";})()[_ngcontent-%COMP%] ;{%BLOCK%}\"]\n    });\n  }\n  return CardLineChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}