{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8000/api/v1/auth';\n      this.apiUrl1 = 'http://localhost:8000/api';\n    }\n    register(request) {\n      const registerUrl = `${this.apiUrl}/register`; // Full URL for registration\n      return this.http.post(registerUrl, request);\n    }\n    authenticate(request) {\n      const authenticateUrl = `${this.apiUrl}/authenticate`;\n      return this.http.post(authenticateUrl, request).pipe(tap(response => {\n        // Store token and role in local storage/session storage\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('roleName', response.roleName);\n      }));\n    }\n    isAdmin() {\n      // Check if the user role is 'ADMIN'\n      return localStorage.getItem('roleName') === 'ADMIN';\n    }\n    isUser() {\n      // Check if the user role is 'USER'\n      return localStorage.getItem('roleName') === 'USER';\n    }\n    forgetPassword(email) {\n      const forgetPasswordUrl = `${this.apiUrl1}/forgetpassword/${email}`;\n      return this.http.post(forgetPasswordUrl, null);\n    }\n    ResetPassword(username, resetPass) {\n      const url = `${this.apiUrl1}/forgetpass/${username}`;\n      return this.http.put(url, resetPass);\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}