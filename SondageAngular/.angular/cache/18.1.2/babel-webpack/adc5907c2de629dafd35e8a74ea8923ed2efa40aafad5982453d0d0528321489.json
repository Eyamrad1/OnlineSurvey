{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ReponseService = /*#__PURE__*/(() => {\n  class ReponseService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://localhost:8000';\n    }\n    addResponse(idQuestion, idOption) {\n      const token = localStorage.getItem('token'); // Retrieve the token from local storage\n      // Set up the headers with the Authorization token\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      // Make the HTTP POST request with headers\n      return this.http.post(`http://localhost:8000/addReponse?idQuestion=${idQuestion}&IdOption=${idOption}`, null, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('Error saving responses:', error);\n        return throwError(error);\n      }));\n    }\n    static #_ = this.ɵfac = function ReponseService_Factory(t) {\n      return new (t || ReponseService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ReponseService,\n      factory: ReponseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ReponseService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}