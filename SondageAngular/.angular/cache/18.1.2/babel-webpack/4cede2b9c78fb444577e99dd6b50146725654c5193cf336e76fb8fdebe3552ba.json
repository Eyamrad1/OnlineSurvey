{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let QuestionService = /*#__PURE__*/(() => {\n  class QuestionService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://localhost:8000';\n    }\n    addQuestionAndAssignToSondage(question, idSondage) {\n      return this.http.post(`${this.baseUrl}/addQuestion/${idSondage}`, question).pipe(tap(response => console.log('Backend response:', response)));\n    }\n    deleteQuestionById(IdQuestion) {\n      return this.http.delete(`${this.baseUrl}/deleteQuestionById/${IdQuestion}`);\n    }\n    updateQuestion(question, IdQuestion) {\n      return this.http.put(`${this.baseUrl}/updateQuestion/${IdQuestion}`, question);\n    }\n    findQuestionById(IdQuestion) {\n      return this.http.get(`${this.baseUrl}/findQuestionById/${IdQuestion}`);\n    }\n    getAllQuestions() {\n      return this.http.get(`${this.baseUrl}/getAllQuestions`);\n    }\n    static #_ = this.ɵfac = function QuestionService_Factory(t) {\n      return new (t || QuestionService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: QuestionService,\n      factory: QuestionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return QuestionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}