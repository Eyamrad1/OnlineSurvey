{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/question.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction QuestionTableComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r4.text);\n  }\n}\nfunction QuestionTableComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"div\", 4)(3, \"h3\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function QuestionTableComponent_div_0_Template_button_click_5_listener() {\n      const question_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.confirmDelete(question_r2));\n    });\n    i0.ɵɵtext(6, \"Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 5);\n    i0.ɵɵtemplate(8, QuestionTableComponent_div_0_div_8_Template, 3, 1, \"div\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(9, \"hr\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(question_r2.text);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.options);\n  }\n}\nexport let QuestionTableComponent = /*#__PURE__*/(() => {\n  class QuestionTableComponent {\n    constructor(questionService, snackBar, router) {\n      this.questionService = questionService;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.questions = [];\n    }\n    ngOnInit() {\n      this.getAllQuestions();\n    }\n    getAllQuestions() {\n      this.questionService.getAllQuestions().subscribe({\n        next: questions => {\n          this.questions = questions;\n        },\n        error: err => {\n          console.error('Error fetching questions', err);\n        }\n      });\n    }\n    confirmDelete(question) {\n      if (confirm('Are you sure you want to delete this question?')) {\n        this.deleteQuestion(question);\n      }\n    }\n    deleteQuestion(question) {\n      if (question && question.idQuestion) {\n        const IdQuestion = question.idQuestion;\n        this.questionService.deleteQuestionById(IdQuestion).subscribe(() => {\n          this.getAllQuestions();\n          this.snackBar.open('Question deleted successfully!', 'Close', {\n            duration: 10000\n          });\n        }, error => {\n          console.error('Error deleting question', error);\n          if (error instanceof HttpErrorResponse) {\n            console.error('Status:', error.status);\n            console.error('Response body:', error.error);\n          }\n        });\n      }\n    }\n    goToAddQuestion() {\n      this.router.navigate(['/addQuestion']);\n    }\n    static #_ = this.ɵfac = function QuestionTableComponent_Factory(t) {\n      return new (t || QuestionTableComponent)(i0.ɵɵdirectiveInject(i1.QuestionService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: QuestionTableComponent,\n      selectors: [[\"app-question-table\"]],\n      decls: 4,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"add-question-button\"], [3, \"click\"], [1, \"question-container\"], [1, \"question-header\"], [1, \"question-body\"], [\"class\", \"option-container\", 4, \"ngFor\", \"ngForOf\"], [1, \"separator\"], [1, \"option-container\"]],\n      template: function QuestionTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, QuestionTableComponent_div_0_Template, 10, 2, \"div\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function QuestionTableComponent_Template_button_click_2_listener() {\n            return ctx.goToAddQuestion();\n          });\n          i0.ɵɵtext(3, \"+\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n        }\n      },\n      dependencies: [i4.NgForOf],\n      styles: [\".question-container[_ngcontent-%COMP%]{padding:20px;background-color:#f9f9f9;margin-bottom:20px;border-radius:8px;box-shadow:0 2px 4px #0000001a}.question-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.question-body[_ngcontent-%COMP%]{margin-top:10px}.option[_ngcontent-%COMP%]{display:flex;align-items:center;margin-top:5px}.option[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{margin-right:10px}.separator[_ngcontent-%COMP%]{border:none;height:1px;background-color:#ddd;margin:20px 0}.add-question-button[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-top:20px}.add-question-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;border-radius:50%;width:40px;height:40px;font-size:24px;cursor:pointer;box-shadow:0 2px 4px #0000001a}.add-question-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#0056b3}\"]\n    });\n  }\n  return QuestionTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}