{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/question.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction QuestionTableComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function QuestionTableComponent_tr_13_Template_button_click_6_listener() {\n      const question_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.confirmDelete(question_r2));\n    });\n    i0.ɵɵtext(7, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.IdQuestion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.text);\n  }\n}\nexport let QuestionTableComponent = /*#__PURE__*/(() => {\n  class QuestionTableComponent {\n    constructor(questionService, snackBar, router) {\n      this.questionService = questionService;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.questions = [];\n    }\n    ngOnInit() {\n      this.getAllQuestions();\n    }\n    getAllQuestions() {\n      this.questionService.getAllQuestions().subscribe({\n        next: questions => {\n          this.questions = questions;\n        },\n        error: err => {\n          console.error('Error fetching questions', err);\n        }\n      });\n    }\n    confirmDelete(question) {\n      if (confirm('Are you sure you want to delete this question?')) {\n        this.deleteQuestion(question);\n      }\n    }\n    deleteQuestion(question) {\n      if (question && question.IdQuestion) {\n        const IdQuestion = question.IdQuestion;\n        this.questionService.deleteQuestionById(IdQuestion).subscribe(() => {\n          this.getAllQuestions();\n          this.snackBar.open('Question deleted successfully!', 'Close', {\n            duration: 10000\n          });\n        }, error => {\n          console.error('Error deleting question', error);\n          if (error instanceof HttpErrorResponse) {\n            console.error('Status:', error.status);\n            console.error('Response body:', error.error);\n          }\n        });\n      }\n    }\n    goToAddQuestion() {\n      this.router.navigate(['/add-question']);\n    }\n    static #_ = this.ɵfac = function QuestionTableComponent_Factory(t) {\n      return new (t || QuestionTableComponent)(i0.ɵɵdirectiveInject(i1.QuestionService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: QuestionTableComponent,\n      selectors: [[\"app-question-table\"]],\n      decls: 14,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n      template: function QuestionTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n          i0.ɵɵtext(2, \"All Questions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n          i0.ɵɵtext(7, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"th\");\n          i0.ɵɵtext(9, \"Text\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"tbody\");\n          i0.ɵɵtemplate(13, QuestionTableComponent_tr_13_Template, 8, 2, \"tr\", 0);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n        }\n      },\n      dependencies: [i4.NgForOf],\n      styles: [\"table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ddd}th[_ngcontent-%COMP%]{background-color:#f4f4f4}button[_ngcontent-%COMP%]{background-color:#f44336;color:#fff;border:none;padding:5px 10px;cursor:pointer}button[_ngcontent-%COMP%]:hover{background-color:#d32f2f}\"]\n    });\n  }\n  return QuestionTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}